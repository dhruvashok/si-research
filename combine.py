sigfile = open("/Users/dashok/research/attack/out/sigs-video-debug.csv")
tmpfile = open("/Users/dashok/research/attack/out/sigs-tryv2.csv", "w+")
frames_to_len = {
    143: 244,
    148: 246,
    151: 248,
    152: 248,
    154: 249,
    156: 250,
    157: 250,
    158: 251,
    159: 251,
    160: 252, # could be 251 or 252
    161: 252,
    162: 252,
    163: 253,
    164: 253,
    165: 254, # could be 253 or 254
    166: 254,
    167: 254,
    168: 255,
    169: 255,
    170: 256,
    171: 256,
    172: 256
}

pubkey = sigfile.readline()
tmpfile.write(pubkey)
parsed_states = [168, 169, 169, 171, 171, 169, 171, 171, 166, 168, 169, 162, 171, 171, 171, 166, 169, 170, 167, 171, 171, 170, 172, 168, 172, 171, 168, 170, 171, 169, 169, 171, 171, 169, 171, 148, 172, 171, 170, 171, 171, 169, 170, 169, 171, 170, 168, 172, 163, 171, 171, 169, 169, 168, 166, 168, 166, 166, 169, 172, 171, 170, 172, 171, 167, 168, 168, 171, 171, 171, 170, 171, 164, 168, 166, 171, 171, 171, 161, 168, 164, 169, 171, 171, 171, 171, 171, 171, 171, 171, 161, 166, 164, 170, 164, 171, 171, 163, 171, 171, 169, 171, 171, 171, 168, 166, 171, 160, 166, 169, 171, 172, 171, 171, 171, 167, 171, 171, 171, 163, 163, 167, 169, 171, 171, 159, 171, 163, 163, 170, 161, 168, 171, 165, 171, 167, 164, 167, 171, 171, 168, 166, 171, 166, 168, 171, 171, 171, 166, 172, 169, 167, 170, 171, 171, 171, 166, 171, 171, 171, 171, 164, 164, 171, 170, 171, 169, 171, 169, 170, 169, 168, 164, 167, 171, 171, 165, 170, 162, 169, 164, 168, 168, 168, 167, 168, 171, 171, 170, 171, 168, 169, 171, 171, 171, 172, 161, 169, 170, 171, 171, 163, 163, 171, 170, 171, 172, 168, 169, 168, 166, 171, 169, 170, 169, 171, 167, 168, 171, 168, 164, 171, 170, 166, 166, 168, 172, 172, 169, 169, 168, 167, 164, 164, 170, 163, 168, 169, 171, 169, 162, 143, 161, 172, 169, 169, 171, 164, 170, 166, 171, 171, 171, 170, 171, 170, 162, 168, 166, 171, 160, 161, 172, 169, 167, 170, 171, 169, 172, 169, 170, 166, 171, 171, 168, 169, 171, 169, 169, 169, 171, 169, 168, 166, 168, 172, 172, 171, 168, 169, 166, 166, 171, 171, 171, 171, 171, 170, 171, 161, 170, 161, 171, 171, 162, 164, 169, 171, 171, 168, 165, 171, 171, 171, 170, 167, 171, 168, 164, 165, 168, 164, 170, 168, 165, 159, 171, 170, 169, 172, 166, 171, 171, 171, 171, 171, 164, 171, 167, 168, 171, 170, 169, 169, 171, 170, 167, 168, 172, 168, 169, 171, 171, 166, 166, 171, 170, 163, 170, 171, 170, 172, 172, 164, 171, 171, 170, 168, 170, 151, 165, 162, 171, 169, 171, 171, 171, 169, 172, 169, 172, 168, 166, 169, 171, 168, 165, 170, 171, 170, 169, 168, 171, 169, 171, 171, 171, 171, 171, 169, 172, 171, 166, 169, 171, 170, 171, 169, 169, 169, 171, 171, 172, 171, 171, 171, 169, 171, 171, 169, 171, 157, 172, 168, 168, 171, 171, 169, 171, 167, 163, 166, 171, 152, 168, 171, 169, 169, 169, 165, 163, 168, 171, 171, 159, 166, 171, 168, 171, 168, 166, 166, 171, 166, 171, 171, 172, 168, 168, 171, 171, 169, 166, 169, 168, 166, 167, 171, 166, 171, 169, 171, 171, 169, 168, 171, 169, 167, 162, 166, 171, 171, 171, 171, 171, 171, 171, 170, 171, 171, 171, 171, 169, 168, 169, 170, 169, 169, 169, 170, 168, 172, 164, 169, 171, 171, 165, 166, 170, 171, 168, 169, 170, 171, 171, 171, 171, 171, 164, 171, 171, 171, 167, 170, 164, 163, 170, 171, 171, 171, 170, 168, 168, 164, 167, 165, 152, 171, 170, 171, 168, 166, 168, 172, 169, 166, 167, 172, 169, 166, 168, 172, 168, 169, 163, 167, 171, 164, 171, 168, 171, 171, 169, 171, 171, 170, 165, 168, 169, 169, 164, 171, 172, 170, 171, 170, 172, 169, 169, 168, 158, 167, 167, 168, 169, 163, 171, 171, 170, 172, 170, 171, 168, 172, 171, 171, 168, 168, 168, 171, 169, 165, 166, 170, 168, 170, 171, 171, 169, 171, 171, 166, 166, 170, 171, 171, 171, 171, 172, 171, 168, 172, 168, 172, 166, 169, 168, 169, 171, 171, 170, 170, 171, 168, 171, 171, 169, 170, 172, 171, 171, 171, 169, 170, 169, 166, 172, 171, 170, 168, 171, 159, 171, 169, 169, 168, 169, 168, 171, 171, 169, 171, 167, 170, 169, 164, 166, 172, 169, 171, 171, 167, 169, 171, 168, 166, 170, 166, 170, 168, 170, 171, 171, 171, 170, 168, 168, 168, 169, 170, 172, 171, 168, 161, 159, 170, 162, 169, 169, 171, 172, 171, 172, 170, 169, 168, 166, 171, 171, 164, 170, 171, 171, 171, 169, 169, 171, 171, 168, 169, 171, 166, 168, 170, 172, 171, 162, 171, 171, 168, 168, 171, 161, 169, 171, 171, 171, 171, 171, 170, 166, 169, 171, 161, 170, 164, 171, 171, 170, 162, 171, 167, 171, 169, 171, 172, 166, 171, 164, 169, 169, 171, 169, 171, 169, 170, 171, 164, 167, 171, 172, 171, 154, 171, 169, 171, 167, 170, 170, 165, 171, 169, 169, 170, 161, 172, 165, 169, 170, 169, 164, 166, 171, 164, 171, 168, 171, 169, 170, 171, 169, 164, 172, 170, 169, 158, 169, 168, 166, 170, 167, 167, 171, 171, 161, 171, 171, 171, 171, 171, 166, 166, 168, 169, 170, 171, 171, 159, 165, 171, 167, 172, 171, 172, 171, 164, 168, 168, 169, 169, 170, 170, 163, 168, 169, 170, 168, 168, 165, 168, 168, 171, 172, 171, 171, 168, 157, 159, 164, 169, 171, 170, 159, 170, 170, 170, 167, 162, 170, 172, 164, 171, 171, 171, 156, 171, 170, 170, 170, 171, 171, 172, 171, 171, 172, 156, 171, 171, 169, 171, 171, 170, 171, 168, 172, 161, 171, 171, 164, 170, 170, 171, 170, 168, 171, 171, 171, 171, 171, 169, 168, 167, 166, 164, 158, 166, 166, 171, 170, 169, 166, 170, 171, 168, 172, 171, 161, 168, 169, 171, 164, 171, 169, 171, 171, 166, 171, 171, 172, 166, 171, 171, 161, 171, 170, 169, 169, 164, 170, 169, 165, 168, 170, 169, 169, 171, 171, 162, 171, 169, 171, 171, 172, 164, 169, 167, 172, 170, 171, 163, 171, 169, 171, 170, 166, 171, 172, 171, 170, 172, 170, 169, 166, 171, 168, 172, 171, 167, 164, 169, 168, 169, 168, 164, 171, 171, 170, 171, 171, 171, 159, 168, 169, 166, 164, 170, 171, 171, 171, 161, 169, 166, 161, 170, 162, 169, 171, 166, 168, 171, 171, 169, 169, 171, 164, 159, 171, 169, 171, 171, 166, 168, 171, 169, 171, 164, 166, 171, 168, 166, 171, 168, 170, 169, 164, 169, 171, 167, 169, 168, 169, 168, 171, 171, 169, 166, 168, 166, 166, 169, 170, 169, 163]

lines = sigfile.readlines()[227:1290]
for i, line in enumerate(lines):
    if i == 650:
        state = 167
    elif i == 1062:
        state = 169
    elif i > 650:
        state = parsed_states[i - 1]
    else:
        state = parsed_states[i]
    line = line.strip().split(",")
    # print(f"{line[0]},{line[1]},{line[2]},{state}")
    tmpfile.write(f"{line[0]},{line[1]},{line[2]},{state}\n")


